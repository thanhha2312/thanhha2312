# USAC AUDIT
# 15
WITH t1 AS
(SELECT
	DATE_FORMAT(c.created_at,"%Y-%m-%d") AS created_at,
	c.id AS customer_id,
	c.enrollment_id
FROM oss_customers c 
WHERE c.created_at >= '2022-01-01'
),

t2 AS 
(SELECT
	t.enrollment_id,
	min(t.nlad_transaction_date) AS min_transaction_date,
	t.id AS transaction_id,
	t.transaction_type 
FROM oss_nlad_transactions t 
WHERE t.enrollment_type IN ('EBB', 'ACP')
GROUP BY 1
),
t3 AS
(SELECT
	t1.customer_id,
	t1.created_at,
	t1.enrollment_id,
	t2.min_transaction_date,
	t2.transaction_id,
	t2.transaction_type
FROM t1 
LEFT JOIN t2 ON t1.enrollment_id = t2.enrollment_id
),
	
t4 AS
(
SELECT
	CASE 
		WHEN t3.created_at < t3.min_transaction_date THEN t3.created_at 
		WHEN t3.created_at > t3.min_transaction_date THEN t3.min_transaction_date 
		WHEN t3.created_at = t3.min_transaction_date THEN t3.created_at
		WHEN t3.min_transaction_date IS NULL THEN t3.created_at
		ELSE NULL END AS created_date,
		t3.customer_id,
		t3.enrollment_id
FROM t3 
)

SELECT
	DATE_FORMAT(t4.created_date,"%Y-%m") AS month_create,
	count(DISTINCT t4.enrollment_id) AS nb_customers
FROM t4
GROUP BY 1
ORDER BY 1 ASC

--------------------------------------------

#16.b
WITH t1 AS 
(SELECT
	o.enrollment_id,
	MAX(o.nlad_transaction_date) AS max_transaction_date,
	o.tribal_benefit_flag
FROM oss_nlad_transactions o 
WHERE o.enrollment_type IN ('EBB', 'ACP') AND o.transaction_type = 'TRANSFERIN' AND o.nlad_transaction_date >= '2022-01-01' 
GROUP BY 1
),
t2 AS
(SELECT
	e.id AS enrollment_id,
	e.enrollment_id AS enrollment_code,
	e.first_name,
	e.middle_name,
	e.last_name,
	e.address_1,
	e.email,
	e.ebb_subscriber_id,
	c.mdn_active
FROM oss_enrollments e
LEFT JOIN oss_customers c ON c.enrollment_id = e.id
)

SELECT 
	t1.enrollment_id,
	t2.first_name,
	t2.middle_name,
	t2.last_name,
	t2.address_1,
	t2.mdn_active,
	t2.ebb_subscriber_id,
	t1.tribal_benefit_flag
FROM t1 
LEFT JOIN t2 ON t1.enrollment_id = t2.enrollment_id

-------------------------------------------
#16e, 16f
SELECT
	o.enrollment_id,
	o.etc_general_use,
	o.transfer_exception,
	DATE_FORMAT(o.nlad_transaction_date,"%Y-%m-%d") AS nlad_transaction_date
FROM oss_nlad_transactions o 
WHERE o.enrollment_type IN ('EBB', 'ACP') AND o.transaction_type = 'TRANSFERIN' AND o.nlad_transaction_date >= '2022-01-01' AND o.enrollment_id IS NOT NULL
ORDER BY 1, 2 ASC

-------------------------------------------

#16i
SELECT
	o.enrollment_id,
	o.id AS transaction_id,
	o.etc_general_use,
	DATE_FORMAT(o.nlad_transaction_date,"%Y-%m-%d") AS nlad_transaction_date
FROM oss_nlad_transactions o 
WHERE o.enrollment_type IN ('EBB', 'ACP') AND o.transaction_type = 'DEENROLL' AND o.nlad_transaction_date >= '2022-01-01' AND o.enrollment_id IS NOT NULL
ORDER BY 1, 2 ASC

------------------------------------------

#16j
SELECT
	o.enrollment_id,
	o.id AS transaction_id,
	o.etc_general_use,
	DATE_FORMAT(o.nlad_transaction_date,"%Y-%m-%d") AS nlad_transaction_date
FROM oss_nlad_transactions o 
WHERE o.enrollment_type IN ('EBB', 'ACP') AND o.transaction_type = 'TRANSFEROUT' AND o.nlad_transaction_date >= '2022-01-01' AND o.enrollment_id IS NOT NULL
ORDER BY 1, 2 ASC

------------------------------------------

#16k
WITH t1 AS 
(SELECT
	o.enrollment_id,
	DATE_FORMAT(o.nlad_transaction_date,"%Y-%m") AS nlad_transaction_month,
	COUNT(DISTINCT o.id) AS nb_times
FROM oss_nlad_transactions o 
WHERE o.enrollment_type IN ('EBB', 'ACP') AND o.transaction_type = 'TRANSFERIN' AND o.nlad_transaction_date >= '2022-01-01' AND o.enrollment_id IS NOT NULL
GROUP BY 1,2
ORDER BY 1, 2 ASC
)

SELECT
	o.enrollment_id,
	t1.nb_times,
	o.id AS transaction_id,
	o.etc_general_use,
	DATE_FORMAT(o.nlad_transaction_date,"%Y-%m") AS nlad_transaction_month,
	DATE_FORMAT(o.nlad_transaction_date,"%Y-%m-%d") AS nlad_transaction_date
FROM oss_nlad_transactions o 
LEFT JOIN t1 ON t1.enrollment_id = o.enrollment_id AND t1.nlad_transaction_month = DATE_FORMAT(o.nlad_transaction_date,"%Y-%m")
WHERE o.enrollment_type IN ('EBB', 'ACP') AND o.transaction_type = 'TRANSFERIN' AND o.nlad_transaction_date >= '2022-01-01' AND o.enrollment_id IS NOT NULL
ORDER BY 1, 5 ASC
;

-------------------------------------------

#16l
WITH t1 AS 
(SELECT
	o.enrollment_id,
	COUNT(DISTINCT o.id) AS nb_times_total
FROM oss_nlad_transactions o 
WHERE o.enrollment_type IN ('EBB', 'ACP') AND o.transaction_type = 'TRANSFERIN' AND o.nlad_transaction_date >= '2022-01-01' AND o.enrollment_id IS NOT NULL
GROUP BY 1
ORDER BY 1 ASC
)

SELECT
	o.enrollment_id,
	t1.nb_times_total,
	o.id AS transaction_id,
	o.etc_general_use,
	DATE_FORMAT(o.nlad_transaction_date,"%Y-%m-%d") AS nlad_transaction_date
FROM oss_nlad_transactions o 
LEFT JOIN t1 ON t1.enrollment_id = o.enrollment_id
WHERE o.enrollment_type IN ('EBB', 'ACP') AND o.transaction_type = 'TRANSFERIN' AND o.nlad_transaction_date >= '2022-01-01' AND o.enrollment_id IS NOT NULL
ORDER BY 1, 5 ASC
;

-----------------------------------------

#18
WITH t1 AS 
(SELECT
	ROW_NUMBER() OVER (PARTITION BY o.enrollment_id ORDER BY o.id ASC) AS row_no,
	o.enrollment_id,
	o.id AS transaction_id,
	o.etc_general_use,
	o.nlad_transaction_date
FROM oss_nlad_transactions o 
WHERE o.enrollment_type IN ('EBB', 'ACP') AND o.transaction_type = 'TRANSFERIN' AND o.nlad_transaction_date >= '2022-01-01' AND o.enrollment_id IS NOT NULL 
),
t2 AS
(SELECT 
	a.enrollment_id, a.transaction_id, a.nlad_transaction_date, b.nlad_transaction_date AS next_nlad_transaction_date, TIMESTAMPDIFF(HOUR, a.nlad_transaction_date, b.nlad_transaction_date) AS hours
FROM t1 a
LEFT JOIN t1 b ON a.enrollment_id = b.enrollment_id  AND a.row_no = b.row_no - 1
WHERE b.nlad_transaction_date IS NOT NULL
ORDER BY 1
)

SELECT * FROM t2 WHERE t2.hours < 24

---------------------------------------

#16d
-- TH1: các enrollment_id có trên bảng oss_notification_transactions
WITH t1 AS
(SELECT
	a.enrollment_id,
	a.nlad_transaction_id,
	a.consent,
	a.source,
	a.created_at AS consent_date,
	b.nlad_transaction_date AS transferout_date,
	DATEDIFF(a.created_at,b.nlad_transaction_date) AS var_date
FROM oss_transfer_agreements a 
LEFT JOIN oss_nlad_transactions b ON b.id = a.nlad_transaction_id
WHERE a.created_at >= '2022-01-01' 
AND a.consent = 'YES' 
AND a.nlad_transaction_id IS NOT NULL
AND b.transaction_type = 'TRANSFEROUT'
),

t2 AS
(SELECT
	n.enrollment_id,
	n.created_at
FROM oss_notification_transactions n
)

SELECT 
	t1.enrollment_id,
	t1.nlad_transaction_id,
	t1.source,
	t1.consent_date,
	t1.transferout_date,
	max(t2.created_at) AS notification_date
FROM t1 
LEFT JOIN t2 ON t1.enrollment_id = t2.enrollment_id AND t2.created_at >= t1.transferout_date AND t2.created_at <= t1.consent_date
WHERE t2.created_at IS NOT NULL
GROUP BY 1,2
;

-- TH2: các enrollment_id ko có trong bảng oss_notification_transactions
WITH t1 AS
(SELECT
	a.enrollment_id,
	a.nlad_transaction_id,
	a.consent,
	a.source,
	a.created_at AS consent_date,
	b.nlad_transaction_date AS transferout_date,
	DATEDIFF(a.created_at,b.nlad_transaction_date) AS var_date
FROM oss_transfer_agreements a 
LEFT JOIN oss_nlad_transactions b ON b.id = a.nlad_transaction_id
WHERE a.created_at >= '2022-01-01' 
AND a.consent = 'YES' 
AND a.nlad_transaction_id IS NOT NULL
AND b.transaction_type = 'TRANSFEROUT'
),

t2 AS
(SELECT
	n.enrollment_id,
	n.created_at
FROM oss_notification_transactions n
)

SELECT 
	t1.enrollment_id,
	t1.nlad_transaction_id,
	t1.source,
	t1.consent_date,
	t1.transferout_date,
	t2.created_at
FROM t1 
LEFT JOIN t2 ON t1.enrollment_id = t2.enrollment_id AND t2.created_at >= t1.transferout_date AND t2.created_at <= t1.consent_date
WHERE t2.created_at IS NULL

---------------------------------------------

#16.c
SELECT
 a.enrollment_id,
 a.nlad_transaction_id,
 a.consent,
 DATE_FORMAT(a.created_at, "%Y-%m-%d") AS consent_date
FROM oss_transfer_agreements a
WHERE a.consent LIKE '%yes%' AND a.created_at >= '2022-01-01' AND a.nlad_transaction_id IS NOT NULL

----------------------------------------------

#16.g
-- payment
WITH t1 AS
(SELECT 
	c.id AS customer_id,
	e.id AS enrollment_id,
	-- e.enrollment_id AS enrollment_code,
	-- e.upgraded_plan AS plan,
	f.id AS order_id,
	f.provider,
	-- CASE WHEN f.type = 1 THEN 'withdraw' WHEN f.type = 2 THEN 'refund' ELSE f.type END AS payment_type,
	f.gross_amount,
	f.`status` AS order_status,
	DATE_FORMAT(f.created_at,"%Y-%m-%d") AS order_created_date,
	d.product_name,
	'payment' AS product_type
FROM oss_enrollments e
LEFT JOIN oss_customers c ON c.enrollment_id = e.id
LEFT JOIN oss_enrollment_payments f ON f.enrollment_id = e.id
LEFT JOIN oss_payment_details d ON d.enrollment_payment_id = f.id
WHERE e.upgraded_plan IN (34, 35, 36, 37) AND f.gross_amount >=12 AND f.type <> 2 AND d.product_type <> 'Phone' AND d.product_price = 12
),
t2 AS 
(SELECT
	c.id AS customer_id,
	c.enrollment_id,
	-- o.`name` AS order_code,
	o.id AS order_id,
	t.provider,
	t.gross_amount,
	t.`status` AS order_status,
	DATE_FORMAT(t.created_at,"%Y-%m-%d") AS order_created_date,
	d.product_name,
	-- d.product_type,
	-- d.product_price
	'order' AS product_type
FROM oss_customers c
LEFT JOIN oss_enrollments e ON e.id = c.enrollment_id
LEFT JOIN oss_customer_orders o ON o.customer_id = c.id
LEFT JOIN oss_customer_order_transactions t ON t.customer_order_id = o.id
LEFT JOIN oss_customer_order_transaction_details d ON d.customer_order_transaction_id = t.id
WHERE e.upgraded_plan IN (34, 35, 36, 37) AND o.type <> 3 AND t.`status` <> 'REFUNDS' AND t.gross_amount >=12 AND d.product_type <> 'Phone'
),

t3 AS
(SELECT
	c.id AS customer_id,
	c.enrollment_id,
	-- o.`name` AS order_code,
	o.id AS order_id,
	t.provider,
	t.gross_amount,
	t.`status` AS order_status,
	DATE_FORMAT(t.created_at,"%Y-%m-%d") AS order_created_date,
	-- i.product_variant_id,
	p.name AS product_name,
	-- d.product_price
	'top_up' AS product_type
FROM oss_customers c
LEFT JOIN oss_enrollments e ON e.id = c.enrollment_id
LEFT JOIN oss_customer_orders o ON o.customer_id = c.id
LEFT JOIN oss_customer_order_transactions t ON t.customer_order_id = o.id
LEFT JOIN oss_customer_order_items i ON i.order_id = o.id
LEFT JOIN oss_plans p ON p.id = i.product_variant_id
WHERE e.upgraded_plan IN (34, 35, 36, 37) AND o.type = 3 AND t.`status` <> 'REFUNDS' AND p.id IN (20,22)
)


SELECT * FROM t1 UNION ALL SELECT * FROM t2 UNION ALL SELECT * FROM t3

-----------------------------

#16h
WITH t1 AS
(SELECT 
	c.id AS customer_id,
	e.id AS enrollment_id,
	f.id AS order_id,
	f.provider,
	f.gross_amount,
	f.`status` AS order_status,
	DATE_FORMAT(f.created_at,"%Y-%m-%d") AS order_created_date,
	'payment' AS product_type
FROM oss_enrollments e
LEFT JOIN oss_customers c ON c.enrollment_id = e.id
LEFT JOIN oss_enrollment_payments f ON f.enrollment_id = e.id
WHERE f.`status` <> 'REFUNDS' AND f.gross_amount > 0 AND f.type <> 2 AND f.created_at >= '2022-01-01'
),
t2 AS
(SELECT
	c.id AS customer_id,
	c.enrollment_id,
	o.id AS order_id,
	t.provider,
	t.gross_amount,
	t.`status` AS order_status,
	DATE_FORMAT(t.created_at,"%Y-%m-%d") AS order_created_date,
	'order' AS product_type
FROM oss_customers c
LEFT JOIN oss_enrollments e ON e.id = c.enrollment_id
LEFT JOIN oss_customer_orders o ON o.customer_id = c.id
LEFT JOIN oss_customer_order_transactions t ON t.customer_order_id = o.id
WHERE t.`status` <> 'REFUNDS' AND t.created_at >= '2022-01-01' AND t.gross_amount > 0
 )
 
SELECT * FROM t1 UNION ALL SELECT * FROM t2

---------------------------------------
#16m
WITH
t1 AS 
(SELECT
	t.enrollment_id,
	min(t.nlad_transaction_date) AS min_transaction_date,
	t.id AS transaction_id
FROM oss_nlad_transactions t 
WHERE t.enrollment_type IN ('EBB', 'ACP') AND t.nlad_transaction_date >= '2022-01-01' AND t.transaction_type = 'ENROLL' 
GROUP BY 1
)

SELECT 
t.enrollment_id,
t.id AS transaction_id,
t.nlad_transaction_date
FROM oss_nlad_transactions t 
WHERE t.enrollment_type IN ('EBB', 'ACP') AND t.nlad_transaction_date >= '2022-01-01' AND t.transaction_type = 'ENROLL'
AND t.id NOT IN (SELECT transaction_id  FROM t1)


