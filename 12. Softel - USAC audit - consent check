WITH t1 AS
(SELECT
	o.enrollment_id,
	o.id AS transaction_id,
	o.first_name,
	o.middle_name,
	o.last_name,
	o.street_address,
	o.city,
	o.state,
	o.zip,
	o.consumer_email,
	CASE WHEN o.telephone_number <> 0 THEN o.telephone_number 
	     WHEN o.telephone_number = 0 AND c.mdn_active IS NOT NULL OR c.mdn_active <> 0 THEN c.mdn_active
			 WHEN o.telephone_number IS NULL AND c.mdn_active IS NOT NULL OR c.mdn_active <> 0 THEN c.mdn_active
			 WHEN o.telephone_number = 0 AND c.mdn_active IS NULL OR c.mdn_active =0 THEN NULL 
			 ELSE NULL
			 END AS telephone_number,
	 o.subscriberid,
	o.tribal_benefit_flag,
	o.nlad_transaction_date AS transfer_date,
	DATE_FORMAT(o.nlad_transaction_date,"%Y-%m") AS nlad_transaction_month,
	o.loi_consent_id,
	o.loi_te_consent_id
FROM audit_nlad_transaction_origin_final o
LEFT JOIN oss_customers c ON c.enrollment_id = o.enrollment_id
WHERE
o.transaction_type = 'TRANSFERIN'
AND o.nlad_transaction_date >= '2022-01-01' 
AND o.enrollment_id IS NOT NULL
),

t2 AS
(SELECT 
	t1.enrollment_id,
	t1.nlad_transaction_date,
	t1.id AS transaction_id,
	ROW_NUMBER() over (PARTITION by t1.enrollment_id ORDER BY t1.rank_by_enrollment ASC) AS row_num
FROM audit_nlad_transaction_origin_final t1
WHERE 
t1.transaction_type = 'ENROLL' AND t1.nlad_transaction_date >= '2022-01-01' AND t1.enrollment_id IS NOT NULL
),
t3 AS
(SELECT
	t2.enrollment_id,
	GROUP_CONCAT(IF(t2.row_num = 1 AND t2.enrollment_id = t2.enrollment_id, t2.nlad_transaction_date, null)) AS first_enroll_date,
	GROUP_CONCAT(IF(t2.row_num <> 1 AND t2.enrollment_id = t2.enrollment_id, t2.nlad_transaction_date, null)) AS re_enroll_date
FROM t2
GROUP BY 1
),
t4 AS
(SELECT
	t1.enrollment_id,
	t1.nlad_transaction_month,
	count(DISTINCT t1.transaction_id) AS nb_transferin_by_month
FROM t1 
GROUP BY 1, 2
),

t5 AS 
(SELECT
	t1.enrollment_id,
	count(DISTINCT t1.transaction_id) AS nb_transferin_total
FROM t1 
GROUP BY 1
),

t6 AS
(SELECT 
	t1.enrollment_id,
	t1.nlad_transaction_date,
	t1.id AS transaction_id
FROM audit_nlad_transaction_origin_final t1
WHERE 
t1.transaction_type = 'DEENROLL' AND t1.nlad_transaction_date >= '2022-01-01' AND t1.enrollment_id IS NOT NULL
),
t7 AS
(SELECT
	t6.enrollment_id,
	GROUP_CONCAT(IF(t6.enrollment_id = t6.enrollment_id, t6.nlad_transaction_date, null)) AS de_enroll_date
FROM t6
GROUP BY 1
),
t8 AS
(SELECT 
	c.id,
	NULL AS exception_code,
	c.consent_date,
	c.notice_send_date,
	c.notice_method_of_delivery,
	c.notice_address
FROM oss_loi_nlad_consents c
),
t9 AS
(SELECT
	c.id,
	c.exception_code,
	c.consent_date,
	c.notice_send_date,
	c.notice_method_of_delivery,
	c.notice_address
FROM oss_loi_transfer_agreements c
),
t10 AS
(SELECT
	t1.nlad_transaction_month,
	t1.transfer_date,
	CASE WHEN t1.transfer_date < '2022-04-19' THEN t8.exception_code WHEN t1.transfer_date >= '2022-04-19' THEN t9.exception_code ELSE NULL END AS exception_code,
	CASE WHEN t1.transfer_date < '2022-04-19' THEN t8.consent_date WHEN t1.transfer_date >= '2022-04-19' THEN t9.consent_date ELSE NULL END AS consent_date,
	CASE WHEN t1.transfer_date < '2022-04-19' THEN t8.notice_send_date WHEN t1.transfer_date >= '2022-04-19' THEN t9.notice_send_date ELSE NULL END AS notice_send_date,
	CASE WHEN t1.transfer_date < '2022-04-19' THEN t8.notice_method_of_delivery WHEN t1.transfer_date >= '2022-04-19' THEN t9.notice_method_of_delivery ELSE NULL END AS notice_method_of_delivery,
	CASE WHEN t1.transfer_date < '2022-04-19' THEN t8.notice_address WHEN t1.transfer_date >= '2022-04-19' THEN t9.notice_address ELSE NULL END AS notice_address,
	t1.enrollment_id,
	CASE WHEN t1.first_name <> '0' THEN t1.first_name ELSE NULL END AS first_name,
	CASE WHEN t1.middle_name <> '0' THEN t1.middle_name ELSE NULL END AS middle_name,
	CASE WHEN t1.last_name <> '0' THEN t1.last_name ELSE NULL END AS last_name,
	CASE WHEN t1.street_address <> '0' THEN t1.street_address ELSE NULL END AS street_address,
	CASE WHEN t1.city <> '0' THEN t1.city ELSE NULL END AS city,
	CASE WHEN t1.state  <> '0' THEN t1.state ELSE NULL END AS state,
	t1.zip,
	CASE WHEN t1.consumer_email <> '0' THEN t1.consumer_email ELSE NULL END AS consumer_email,
	t1.telephone_number,
	t1.subscriberid,
	t1.tribal_benefit_flag,
	t3.first_enroll_date,
	CAST(t3.re_enroll_date AS char) AS re_enroll_date,
	CAST(t7.de_enroll_date AS char) AS de_enroll_date,
	t4.nb_transferin_by_month AS transferin_count_by_month,
	t5.nb_transferin_total AS transferin_count_total
FROM t1
LEFT JOIN t3 ON t3.enrollment_id = t1.enrollment_id
LEFT JOIN t4 ON t4.enrollment_id = t1.enrollment_id  AND t4.nlad_transaction_month = t1.nlad_transaction_month
LEFT JOIN t5 ON t5.enrollment_id = t1.enrollment_id
LEFT JOIN t7 ON t7.enrollment_id = t1.enrollment_id 
LEFT JOIN t8 ON t8.id = t1.loi_consent_id AND t1.transfer_date < '2022-04-19'
LEFT JOIN t9 ON t9.id = t1.loi_te_consent_id AND t1.transfer_date >= '2022-04-19'
ORDER BY t1.nlad_transaction_month, t1.transfer_date, t1.enrollment_id ASC
)
SELECT
	t10.nlad_transaction_month,
	t10.transfer_date,
	t10.exception_code,
	t10.consent_date,
	t10.notice_send_date,
	t10.notice_method_of_delivery,
	t10.notice_address,
	DATEDIFF(t10.transfer_date,t10.consent_date) AS var_consent,
	TIMESTAMPDIFF(HOUR,t10.notice_send_date,t10.consent_date) AS var_noti_date
FROM t10
WHERE t10.consent_date IS NOT NULL OR t10.notice_send_date IS NOT NULL 
